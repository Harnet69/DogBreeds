default_platform(:android)

platform :android do

  # Runs before all tasks
  before_all do

  # Add SLACK_URL & make it accessible to all lanes
   ENV["SLACK_URL"]
  end

  desc "Build a debug APK"
  lane :debug do
    gradle(task: "clean assembleDebug") # https://developer.android.com/studio/build/building-cmdline#DebugMode
  end

  desc "Build a signed release APK & deploy to slack"
  lane :slack_apk_build do
    gradle(
      task: "assemble",
      build_type: "Release",
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => ENV['KEYSTORE_PATH'],
        "android.injected.signing.store.password" => ENV['STORE_PASSWORD'],
        "android.injected.signing.key.alias" => ENV['KEY_ALIAS'],
        "android.injected.signing.key.password" => ENV['KEY_PASSWORD'],
      }
    )
    upload_to_slack()
    slack(message: ":rocket: *Build Successful!* :rocket:")
  end

  desc "Upload APK to Slack channel"
  private_lane :upload_to_slack do |options|
    file_path = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
    file_name = file_path.gsub(/\/.*\//,"")
    access_token = ENV["ACCESS_TOKEN"]
    channel_name = "qa_team"

    sh "echo Uploading " + file_name + " to Slack"
    sh "curl https://slack.com/api/files.upload -F token=\"" + access_token + "\" -F channels=\"" + channel_name + "\" -F title=\"" + file_name + "\" -F filename=\"" + file_name + "\" -F file=@" + file_path
  end

  # Runs after all tasks. This block is called only when the executed lane is successful
  after_all do |lane|
    # Slack action
    slack(
      message: "Slack Message Delivered Successfully"
    )
  end

  error do |lane, exception|
    slack(
      message: exception.message,
      success: false
      )
  end
end